"""
Configuraci√≥n del Sistema de An√°lisis Jurisprudencial SCJN
"""

import os
from typing import Dict, List

class Config:
    """Configuraci√≥n general del sistema"""
    
    # API Keys
    GEMINI_API_KEY = os.environ.get("GEMINI_API_KEY")
    
    # Configuraci√≥n de Gemini
    GEMINI_MODEL = "gemini-2.5-flash"
    GEMINI_TEMPERATURE = 0
    GEMINI_THINKING_BUDGET = 0
    
    # Extensiones de archivo soportadas
    EXTENSIONES_SOPORTADAS = {
        '.pdf': 'application/pdf',
        '.docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        '.doc': 'application/msword',
        '.txt': 'text/plain',
        '.jpg': 'image/jpeg',
        '.jpeg': 'image/jpeg',
        '.png': 'image/png',
        '.tiff': 'image/tiff',
        '.tif': 'image/tiff'
    }
    
    # Configuraci√≥n de procesamiento
    TIMEOUT_BASE_SEGUNDOS = 120
    MAX_REINTENTOS = 2
    PAUSA_ENTRE_REINTENTOS_SEGUNDOS = 5
    PAUSA_ENTRE_DOCUMENTOS_SEGUNDOS = 2.0
    
    # Directorios de salida dentro del expediente
    CARPETA_JSONS = "jsons"
    CARPETA_REPORTE = "reporte"
    
    # Nombres de archivos
    NOMBRE_BITACORA = "bitacora_proceso.json"
    SUFIJO_JSON_MAPEADO = "_mapeado.json"
    PREFIJO_REPORTE = "reporte_ejecutivo_"
    
    # L√≠mites y validaciones
    MAX_LONGITUD_TITULO_PUNTO = 100
    MAX_LONGITUD_RESUMEN_PUNTO = 120
    MAX_LONGITUD_PLANTEAMIENTO = 280
    MAX_LONGITUD_CITA = 500
    MIN_PUNTOS_ANALISIS = 1
    MAX_CITAS_POR_PUNTO = 3
    
    # Estimaci√≥n de costos (USD por token - aproximado)
    COSTO_ESTIMADO_POR_TOKEN = 0.000001
    
    @classmethod
    def validar_configuracion(cls):
        """Valida que la configuraci√≥n est√© completa"""
        errores = []
        
        if not cls.GEMINI_API_KEY:
            errores.append("GEMINI_API_KEY no est√° configurada en las variables de entorno")
        
        if errores:
            raise ValueError("Errores de configuraci√≥n:\n" + "\n".join(f"- {error}" for error in errores))
        
        return True
    
    @classmethod
    def get_configuracion_procesamiento(cls) -> Dict:
        """Retorna configuraci√≥n para el procesamiento de documentos"""
        return {
            'timeout_base_segundos': cls.TIMEOUT_BASE_SEGUNDOS,
            'max_reintentos': cls.MAX_REINTENTOS,
            'pausa_entre_reintentos_segundos': cls.PAUSA_ENTRE_REINTENTOS_SEGUNDOS,
            'pausa_entre_documentos_segundos': cls.PAUSA_ENTRE_DOCUMENTOS_SEGUNDOS
        }


class PromptTemplates:
    """Templates de prompts para Gemini"""
    
    MAPEO_PROMPT = """Act√∫a como experto en an√°lisis documental y legal desde la perspectiva del marco constitucional y regulatorio de M√©xico y analiza la siguiente informaci√≥n para poder identificar informaci√≥n relevante de los siguientes documentos que permitan identificar la competencia, legitimidad y procedencia de la intervenci√≥n de la suprema corte de justicia en la resoluci√≥n de este asunto.
S√≥lo responde con el objeto JSON, no des explicaciones. La respuesta es en Espa√±ol Mexicano
A partir del documento que se te proporcione genera un objeto json con las siguientes llaves:

Nombre del documento
Incluye exactamente el nombre del archivo (campo "documento").
Identificaci√≥n b√°sica
Extrae: tipo de documento, fecha de expedici√≥n, √≥rgano emisor, expediente(s) citados y n√∫mero de fojas o p√°ginas.
Partes relevantes
Quejoso / promovente / recurrente
Autoridad responsable
Terceros interesados (si los hay)
Planteamiento o acto reclamado
Frase breve (‚â§ 280 caracteres) que resuma la controversia o decisi√≥n impugnada.
Puntos de an√°lisis (array)
Para cada punto:
"titulo": m√°x. 10 palabras
"resumen": m√°x. 120 caracteres
"pagina": p√°gina(s) exacta(s) dentro del PDF
"citas": 1-3 fragmentos textuales literalmente copiados (‚â§ 500 caracteres c/u) que respalden el punto.
Normas o precedentes invocados
Lista breve de art√≠culos constitucionales, leyes o tesis jurisprudenciales mencionados, s√≥lo mencionados a un nivel general sin extraer el detalle de cada documento citado.
Pretensiones o resoluci√≥n
Array con cada petici√≥n o determinaci√≥n final.
Metadatos de ubicaci√≥n
"paginas_pdf": [inicio, fin] del documento en el PDF original.
Profundidad
Conserva jerarqu√≠a: "conceptos_violacion" o "acuerdos" como sub-arrays cuando aplique.

Ejemplo de salida esperada (solo ilustrativo):
{
  "documento": "ADMISI√ìN ADR 1241 2024.pdf",
  "tipo": "Acuerdo de Admisi√≥n",
  "fecha_expedicion": "2024-02-12",
  "organo_emisor": "Presidencia de la SCJN",
  "expediente": "1241/2024",
  "folios": 11,
  "paginas_pdf": [1, 11],
  "partes": {
    "quejoso": "Corporativo Ferloguer, S.A. de C.V.",
    "autoridad_responsable": "6¬™ Sala Civil TSJCDMX"
  },
  "planteamiento": "Consecuencias civiles de la falsedad en la promesa de decir verdad.",
  "puntos_analisis": [
    {
      "titulo": "Interpretaci√≥n art. 130",
      "resumen": "Solicita aclarar efectos civiles de la promesa incumplida.",
      "pagina": 3,
      "citas": [
        "¬øpuede acaso hacer y tres manifestaciones diversas‚Ä¶ y pretender que todas sean v√°lidas?"
        ]
    }
  ],
  "normas_invocadas": ["Art. 130 CPEUM", "Art. 107 fracc. IX CPEUM"],
  "pretensiones": ["Admitir el recurso de revisi√≥n"]
}"""

    REPORTE_PROMPT = """**PROMPT PARA GENERACI√ìN DE REPORTE EJECUTIVO DE CASO LEGAL**

**Rol:** Act√∫a como un analista legal senior con la habilidad de sintetizar informaci√≥n compleja de m√∫ltiples documentos judiciales en un resumen ejecutivo claro, preciso y estructurado.
**Objetivo:** Tu tarea es generar un **documento de texto en formato Markdown** titulado "Ficha T√©cnica del Caso: Amparo Directo en Revisi√≥n {expediente}". Este documento debe resumir de manera esquem√°tica y cronol√≥gica todo el flujo del caso legal a partir de los archivos de texto adjuntos (que son res√∫menes en formato JSON de los documentos originales). El reporte debe ser auto-contenido y permitir a un lector entender el caso de principio a fin de manera r√°pida y eficiente.
**An√°lisis y Estructura del Contenido:** Analiza la totalidad de los documentos proporcionados para extraer y organizar la informaci√≥n en las siguientes secciones obligatorias y en este orden estricto:
1. **T√≠tulo Principal:** `### Ficha T√©cnica del Caso: Amparo Directo en Revisi√≥n {expediente}`
2. **Introducci√≥n Breve:** Un p√°rrafo que explique el prop√≥sito del documento.
3. **Secci√≥n 1: Partes Involucradas:**
   * Identifica y lista a los actores clave del proceso bajo los siguientes subt√≠tulos:
      * **Quejoso (Afectado):**
      * **Autoridad Responsable (Acto de Origen):**
      * **Autoridad de Amparo (Recurrida):**
      * **M√°ximo Tribunal (Resolutor):**
4. **Secci√≥n 2: Cronolog√≠a de Eventos Clave:**
   * Extrae las fechas de expedici√≥n (`fecha_expedicion`) y los eventos m√°s relevantes de cada documento para construir una l√≠nea de tiempo cronol√≥gica en formato de lista. Cada punto debe incluir la fecha y una descripci√≥n concisa del evento.
5. **Secci√≥n 3: Documentos y Recursos Fundamentales:**
   * Identifica y lista los documentos procesales que fueron cruciales para el desarrollo del caso (ej. Sentencia inicial, Demanda de Amparo, Recurso de Revisi√≥n, Sentencia Definitiva).
6. **Secci√≥n 4: Resoluci√≥n Final de la Suprema Corte:**
   * Sintetiza la decisi√≥n final contenida en el √∫ltimo documento del expediente. Explica claramente la decisi√≥n tomada y sus fundamentos principales.
7. **Secci√≥n 5: Siguientes Pasos:**
   * Bas√°ndose en la parte resolutiva, describe en una lista numerada los pasos procesales que deben seguirse despu√©s de la decisi√≥n.
**Requisitos de Formato y Tono:**
* **Formato de Salida:** Un √∫nico documento de texto utilizando **Markdown**.
* **Estructura:** Utiliza encabezados (`###`), subt√≠tulos en negrita (`**Subt√≠tulo:**`), y listas con vi√±etas o numeradas para una m√°xima claridad y organizaci√≥n.
* **Tono:** Profesional, objetivo y f√°ctico. La redacci√≥n debe ser concisa y directa, evitando jerga legal excesiva.
* **Idioma:** El documento final debe estar completamente en **espa√±ol**.
* **Fuente de Datos:** La informaci√≥n debe derivarse exclusivamente de los archivos de texto proporcionados. No se debe inventar ni inferir informaci√≥n que no est√© presente en los documentos."""


# Mensajes del sistema
MENSAJES = {
    'inicio': "üöÄ Sistema de An√°lisis Jurisprudencial SCJN",
    'directorio_no_existe': "‚ùå Error: La carpeta {ruta} no existe",
    'directorio_invalido': "‚ùå Error: {ruta} no es una carpeta",
    'sin_archivos_soportados': "‚ùå No se encontraron archivos soportados en la carpeta",
    'expediente_nuevo': "üìã Expediente nuevo - {total} documentos encontrados",
    'expediente_resumiendo': "üîÑ Resumiendo expediente - {procesados} procesados, {pendientes} pendientes",
    'expediente_completo': "‚úÖ Todos los documentos ya est√°n procesados",
    'procesamiento_exitoso': "‚úÖ Documento procesado exitosamente",
    'procesamiento_error': "‚ùå Error procesando documento",
    'reporte_generado': "üìä Reporte ejecutivo generado",
    'bitacora_guardada': "üìã Bit√°cora guardada",
    'proceso_interrumpido': "‚ö†Ô∏è Proceso interrumpido por el usuario"
}